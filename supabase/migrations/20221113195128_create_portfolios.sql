-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

-- Extension: pg_cron

-- DROP EXTENSION pg_cron;

CREATE EXTENSION IF NOT EXISTS pg_cron
    SCHEMA extensions
    VERSION "1.4";

-- Extension: http

-- DROP EXTENSION http;

CREATE EXTENSION IF NOT EXISTS http
    SCHEMA extensions
    VERSION "1.3";

CREATE TABLE IF NOT EXISTS public.portfolio_posts
(
    created_at timestamp with time zone DEFAULT now(),
    title text COLLATE pg_catalog."default",
    url character varying COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    content text COLLATE pg_catalog."default",
    published_at timestamp with time zone,
    portfolio_id bigint,
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    CONSTRAINT portfolio_posts_pkey PRIMARY KEY (id),
    CONSTRAINT portfolio_posts_url_key UNIQUE (url),
    CONSTRAINT portfolio_posts_portfolio_id_fkey FOREIGN KEY (portfolio_id)
        REFERENCES public.portfolios (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.portfolio_posts
    OWNER to postgres;

GRANT ALL ON TABLE public.portfolio_posts TO anon;

GRANT ALL ON TABLE public.portfolio_posts TO authenticated;

GRANT ALL ON TABLE public.portfolio_posts TO postgres;

GRANT ALL ON TABLE public.portfolio_posts TO service_role;

REVOKE ALL ON TABLE public.profiles FROM anon;
REVOKE ALL ON TABLE public.profiles FROM postgres;
REVOKE ALL ON TABLE public.profiles FROM service_role;
GRANT ALL ON TABLE public.profiles TO anon;

GRANT ALL ON TABLE public.profiles TO service_role;

GRANT ALL ON TABLE public.profiles TO postgres;

REVOKE ALL ON TABLE public.portfolios FROM authenticated;
REVOKE ALL ON TABLE public.portfolios FROM postgres;
REVOKE ALL ON TABLE public.portfolios FROM service_role;
GRANT ALL ON TABLE public.portfolios TO authenticated;

GRANT ALL ON TABLE public.portfolios TO service_role;

GRANT ALL ON TABLE public.portfolios TO postgres;

ALTER TABLE IF EXISTS public.portfolios
    ADD CONSTRAINT portfolios_feed_url_key UNIQUE (feed_url);
